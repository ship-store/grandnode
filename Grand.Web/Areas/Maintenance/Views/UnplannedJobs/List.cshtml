@model UnplannedJobListModel
@inject Grand.Core.Domain.Common.AdminAreaSettings adminAreaSettings
@{
    ViewBag.Title = T("Maintenance.UnplannedJobs").Text;
}

    <form asp-controller="UnplannedJobs" asp-action="List" method="get">
        <antiforgery-token />
        <div class="row" id="SearchSection">
            <div class="col-md-12">
                <div class="x_panel light form-fit">
                    <div class="x_title">
                        <div class="caption">
                            <i class="fa fa-cubes"></i>

                            @T("Maintenance.UnplannedJobs")
                        </div>
                        <div class="actions btn-group btn-group-devided">
                            <a href="@Url.Action("AddUnplannedJobs")" class="btn green"><i class="fa fa-plus"></i><span class="hidden-xs"> @T("Admin.Common.AddNew") </span></a>
                            <vc:admin-widget widget-zone="vendor_list_buttons" additional-data="null" />
                            <button type="button" name="delete-selected" id="delete-selected" class="btn red">
                                <i class="fa fa-trash-o"></i>
                                @T("Admin.Common.Delete.Selected")
                            </button>
                        </div>

                    </div>
                    <div class="x_content form">
                        <div class="form-horizontal">
                            <div class="form-body col-md-6 advanced-filter">
                                <div class="form-group">

                                    <div class="col-xs-9 col-md-8 col-sm-8">
                                        <input id="SearchInput" type="text" placeholder="Search.." class="form-control">
                                    </div>
                                    <div id="ExtendFilter">
                                        <button class="btn btn-success filter-submit" id="search-vessel">
                                            <i class="fa fa-search"></i> @T("Admin.Common.Search")
                                        </button>

                                    </div>
                                </div>
                            </div>
                            <div class="form-body col-md-6 advanced-filter">
                                <div class="form-group">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="x_content">
                        <div id="vessel-grid"></div>
                    </div>
                </div>
            </div>
        </div>
        <script>
        $(document).ready(function () {
            $("#vessel-grid").kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: "@Html.Raw(Url.Action("List", "UnplannedJobs","Maintenance"))",
                            type: "POST",
                            dataType: "json",
                            data: additionalData
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "Total",
                        errors: "Errors"
                    },
                    error: function(e) {
                        display_kendoui_grid_error(e);
                        this.cancelChanges();
                    },
                    pageSize: @(adminAreaSettings.DefaultGridPageSize),
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                pageable: {
                    refresh: true,
                    pageSizes: [@(adminAreaSettings.GridPageSizes)]
                },
                editable: {
                    confirmation: false,
                    mode: "inline"
                },
                scrollable: false,
                columns: [
                    {
                        field: "Id",
                        headerTemplate: "<label class='mt-checkbox mt-checkbox-outline control control-checkbox mt-NoMargin'><input id='mastercheckbox' type='checkbox'/><div class='control__indicator control__indicator_custom mt-top2 rtlabel'></div></label>",
                        template: "<label class='mt-checkbox mt-checkbox-outline control control-checkbox mt-NoMargin'><input type='checkbox' value='#=Id#' class='checkboxGroups chk'/><div class='control__indicator control__indicator_custom mt-top2'></div></label>",
                        width: 50
                    },
                    {
                    field: "EquipmentName",
                    title: "@T("maintenance.unplannedjobs.fields.equipment_name")",
                    width: 300,
                    template: '<a class="k-link" href="Edit/#=Id#">#:EquipmentName#</a>',
                }, {
                    field: "JobOrder",
                    title: "@T("maintenance.unplannedjobs.fields.job_order")",
                    width: 300,
                    template: '<a class="k-link" href="Edit/#=Id#">#:JobOrder#</a>',
                    },
                    {
                    field: "Title",
                    title: "@T("maintenance.unplannedjobs.fields.title")",
                    width: 300,
                    template: '<a class="k-link" href="Edit/#=Id#">#:Title#</a>',
                    },
                    {
                    field: "JobReportedDate",
                    title: "@T("maintenance.unplannedjobs.fields.jobreported_date")",
                    width: 300,
                    template: '<a class="k-link" href="Edit/#=Id#">#:JobReportedDate#</a>',
                    },
                    {
                    field: "ReportedBy",
                    title: "@T("maintenance.unplannedjobs.fields.reported_by")",
                    width: 300,
                    template: '<a class="k-link" href="Edit/#=Id#">#:ReportedBy#</a>',
                    },
                    {
                    field: "Status",
                    title: "@T("maintenance.unplannedjobs.fields.status")",
                    width: 300,
                    template: '<a class="k-link" href="Edit/#=Id#">#:Status#</a>',
                    },
                ]
            });
        });
        </script>
        <script type="text/javascript">
            var selectedIds = [];
        $(document).ready(function () {
            //search button
            $('#search-vessel').click(function () {
                //search
                var grid = $('#vessel-grid').data('kendoGrid');
                grid.dataSource.page(1); //new search. Set page size to 1
                //grid.dataSource.read(); we already loaded the grid above using "page" function
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SearchName)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#search-vessel").click();
                    return false;
                }
            });
        });

            //delete selected
            $('#delete-selected').click(function(e) {

                e.preventDefault();

                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);
        // Look for all checkboxes that have a specific class and was checked
                 var chkArray = [];
        $(".chk:checked").each(function() {
            chkArray.push($(this).val());
        });


               // calling  via jquery
               $.get("http://localhost:16592/Maintenance/UnplannedJobs/DeleteSelected?selectedIds='" + chkArray + "'");


                window.location.reload();
                return false;
            });

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').prop('checked', $(this).is(':checked')).change();

                  //wire up checkboxes.
            $('#vessel-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.
                        selectedIds.push($check.val());
                    }
                }
                else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.
                        selectedIds = $.grep(selectedIds, function (item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
            });
        function additionalData() {
            var data = {
                SearchName: $('#@Html.FieldIdFor(model => model.SearchName)').val()
            };
            addAntiForgeryToken(data);
            return data;
        }
        </script>
    </form>
    <script>
        $(document).ready(function () {
            $("#SearchInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#SearchSection tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>