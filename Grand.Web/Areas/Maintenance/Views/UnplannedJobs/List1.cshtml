@{
    var VesselName = @HttpContextAccessor.HttpContext.Session.GetString("VesselName");
    var SessionVar = @HttpContextAccessor.HttpContext.Session.GetString("email");

    if (VesselName == null)
    {
        <script>

        $(window).load(function(){
            swal({

                title: 'Vessel Not Selected!',
                allowOutsideClick: false,
                text: 'Please select a Vessel',
                background: 'white',
                confirmButtonText: 'OK',
                confirmButtonColor: '#48b4e0',
            })
                .then(function () {
                    window.location.href = '@Url.Action("VesselList","Vessel")';
                })

            });

        </script>
    }

    if (SessionVar == null)
    {
        <script>

            $(window).load(function ()
            {
            swal({

                title: 'TimeOut!',
                allowOutsideClick: false,
                text: '"Time Out! , Please Login"',
                background: 'white',
                confirmButtonText: 'OK',
                confirmButtonColor: '#48b4e0',
            })
                .then(function ()
                {
                    window.location.href = '@Url.Action("LoginPage","Register")';
                })

            });

        </script>
    }

}

<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.common.min.css" />
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.uniform.min.css" />
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.uniform.mobile.min.css" />

<script src="https://kendo.cdn.telerik.com/2020.1.114/js/jquery.min.js"></script>
<script src="https://kendo.cdn.telerik.com/2020.1.114/js/kendo.all.min.js"></script>


@*<link rel="stylesheet" href="~/Maintenance/scripts/model/modalcss.css">*@



<div class="row" id="SearchSection">
    <div class="col-md-12">
        <div class="x_panel light form-fit">
            <div class="x_title">
                <div class="caption">
                    <i class="fa fa-cubes"></i>

                    Unplanned Jobs
                </div>
                <div class="actions btn-group btn-group-devided">
                    @*<a href="@Url.Action("AddUnplannedJobs")" class="btn green"><i class="fa fa-plus"></i><span class="hidden-xs"> @T("Admin.Common.AddNew") </span></a>
                    <vc:admin-widget widget-zone="vendor_list_buttons" additional-data="null" />
                    <button type="button" name="delete-selected" id="delete-selected" class="btn red">
                        <i class="fa fa-trash-o"></i>
                        @T("Admin.Common.Delete.Selected")
                    </button>
                    <button type="button" id="btnSelectRow" value="GetValue" class="btn btn-success" data-toggle="modal" data-target="#myModal">View</button>

                    <button type="button" id="btnSelectRow1" value="GetValue" class="btn btn-success" data-toggle="modal" data-target="#myModal1">Complete Job</button>*@
                </div>

            </div>


            <div class="x_content">
                <div id="vessel-grid"></div>
            </div>
        </div>
    </div>
</div>






<div id="example">
    <antiforgery-token />
    <div id="grid"></div>
    <script>

        var Status = [
        { StatusId: 1, name: "Pending" },
        { StatusId: 2, name: "In Progress" }
        ];

        $(document).ready(function () {
            $("#grid").kendoGrid({
                dataSource: {

                    transport: {

                         read:
                             {
                                url: "@Html.Raw(Url.Action("ReadData1", "UnplannedJobs","Maintenance"))",
                                type: "POST",
                                dataType: "json",
                                data: additionalData
                        },
                        update:
                            {
                                url: "@Html.Raw(Url.Action("EditItem","UnplannedJobs","Maintenance"))",
                                type: "POST",
                                dataType: "json",
                                data: additionalData
                            },
                            create:
                            {
                                url: "@Html.Raw(Url.Action("EditItem","UnplannedJobs","Maintenance"))",
                                type: "POST",
                                dataType: "json"
                            }
                    },
                    batch: true,
                    schema:
                    {
                               data: "Data",
                               total: "Total",
                               errors: "Errors",
                        model:
                        {
                            id : "Id",
                            fields:
                            {
                                Id:
                                {
                                    validation: { required: true },
                                    editable: false,
                                },
                              EquipmentName: { type: "string" },
                              JobOrder: { type: "string" },
                              Title: { type: "string" },
                              JobReportedDate: { type: "string" },
                              ReportedBy: { type: "string" },
                              Status: { type: "string" }
                            }
                        }
                    },
                    pageSize: 30
                },
                height: 590,
                sortable: true,
                reorderable: true,
                groupable: true,
                resizable: true,
                filterable: true,
                columnMenu: true,
                 scrollable:
                    {
                       endless: true
                    },
                //pageable:
                //    {
                //       numeric: false,
                //       previousNext: false
                //    },
                selectable: true,
                allowCopy: true,
                columns: [
                    //{
                    //        field: "Id",
                    //        headerTemplate: "<label class='mt-checkbox mt-checkbox-outline control control-checkbox mt-NoMargin'><input id='mastercheckbox' type='checkbox'/><div class='control__indicator control__indicator_custom mt-top2 rtlabel'></div></label>",
                    //        template: "<label class='mt-checkbox mt-checkbox-outline control control-checkbox mt-NoMargin'><input type='checkbox' value='#=Id#' class='checkboxGroups chk'/><div class='control__indicator control__indicator_custom mt-top2'></div></label>",
                    //    width: 50,
                    //        locked: true,
                    //    lockable: false,

                    //    },
                    {
                    field: "JobOrder",
                    title: "Job Order",
                    width: 150,

                },
                    {
                    field: "EquipmentName",
                    title: "Equipment Name",
                    width: 190
                }, {
                    field: "Title",
                    title: "Title",
                    width: 150
                },{
                    field: "JobReportedDate",
                    title: "Job Reported Date",
                    width: 190
                },{
                    field: "Status",
                    title: "Status",
                     width: 150,

                },{
                    field: "ReportedBy",
                    title: "Reported By",
                    width: 150
                },{
                  
                    title: "&nbsp;",
                    width: 200
                  }],
                    editable: "inline"

            });
        });

         function customBoolEditor(container, options) {
                        var guid = kendo.guid();
                        $('<input class="k-checkbox" id="' + guid + '" type="checkbox" name="Discontinued" data-type="boolean" data-bind="checked:Discontinued">').appendTo(container);
                        $('<label class="k-checkbox-label" for="' + guid + '">​</label>').appendTo(container);
                    }

                    function additionalData() {
                        var data = {};
                        addAntiForgeryToken(data);
                        return data;
        }

        var selectedIds = [];
        //delete selected
        $('#delete-selected').click(function (e)
        {
            e.preventDefault();
            var postData = {selectedIds: selectedIds};
            addAntiForgeryToken(postData);

            // Look for all checkboxes that have a specific class and was checked
            var chkArray = [];
            $(".chk:checked").each(function ()
            {
                chkArray.push($(this).val());
            });

            // calling  via jquery
            $.get("http://localhost:16592/Maintenance/UnplannedJobs/DeleteSelected?selectedIds='" + chkArray + "'");
            window.location.reload();
            return false;
        });

        $('#mastercheckbox').click(function ()
        {
            $('.checkboxGroups').prop('checked', $(this).is(':checked')).change();

            //wire up checkboxes.
                $('#vessel-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e)
                {
                    var $check = $(this);
                    if ($check.is(":checked") == true)
                    {
                        var checked = jQuery.inArray($check.val(), selectedIds);
                        if (checked == -1)
                        {
                            //add id to selectedIds.
                            selectedIds.push($check.val());
                        }
                    }
                    else
                    {
                        var checked = jQuery.inArray($check.val(), selectedIds);
                        if (checked > -1)
                        {
                            //remove id from selectedIds.
                            selectedIds = $.grep(selectedIds, function (item, index)
                            {
                                return item != $check.val();
                            });
                        }
                    }
                    updateMasterCheckbox();
                });
        });

         $("#btnSelectRow").click(function(){

    var grid = $("#grid").data("kendoGrid");
             var selectedItem = grid.dataItem(grid.select());
             if (selectedItem == null) {

                 window.location.reload();
                 alert("Please Select a Job");
             }
             $("#lblJobOrder").text(selectedItem.JobOrder);
             $("#lblEquipmentName").text(selectedItem.EquipmentName);
             $("#lblEquipmentcode").text(selectedItem.EquipmentCode);
             $("#lblTitle").text(selectedItem.Title);
             $("#lblJobReportedDate").text(selectedItem.JobReportedDate);
             $("#lblReportedBy").text(selectedItem.ReportedBy);
             $("#lblStatus").text(selectedItem.Status);

             var ename = selectedItem.EquipmentName;
             var ecode = selectedItem.EquipmentCode;
             var jobOrder = selectedItem.JobOrder;
             var title = selectedItem.Title;
             var jobReportedDate = selectedItem.JobReportedDate;
             var reportedBy = selectedItem.ReportedBy;
             var Status = selectedItem.Status;

             document.getElementById("Ename").value = ename;
             document.getElementById("ECode").value = ecode;
             document.getElementById("JobOrder").value = jobOrder;
             document.getElementById("Title").value = title;
             document.getElementById("JobReportedDate").value = jobReportedDate;
             document.getElementById("ReportedBy").value = reportedBy;
             document.getElementById("Status").value = Status;


         })

    </script>

   