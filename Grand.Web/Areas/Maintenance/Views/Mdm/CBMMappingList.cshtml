
@model DepartmentListModel
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.common.min.css" />
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.uniform.min.css" />
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.uniform.mobile.min.css" />

<script src="https://kendo.cdn.telerik.com/2020.1.114/js/jquery.min.js"></script>
<script src="https://kendo.cdn.telerik.com/2020.1.114/js/kendo.all.min.js"></script>

<div class="row" id="SearchSection">
    <div class="col-md-12">
        @*<div class="x_panel light form-fit">*@
        <div class="x_title">
            <div class="caption" style="color:#0E5679;font-weight:900">
                <i class="fa fa-cubes" style="color:#0E5679"></i>
                CBM MAPPING LIST
            </div>

            <div class="actions btn-group btn-group-devided">
                @*<a href="@Url.Action("AddVessel")" class="btn green"><i class="fa fa-plus"></i><span class="hidden-xs">Job Postpone @T("Admin.Common.AddNew") </span></a>*@
                <vc:admin-widget widget-zone="vendor_list_buttons" additional-data="null" />
                @*<a href="@Url.Action("NewCBMMapping")" class="btn btn-success"><i class="fa fa-plus"></i><span class="hidden-xs"> </span></a>*@
                <a href="javascript:LoadNewMapping()" class="btn btn-success"><i class="fa fa-plus"></i><span class="hidden-xs"> </span></a>
                <a href="#" class="btn btn-success"><i class="fa fa-pencil-square-o"></i><span class="hidden-xs"> </span></a>
                <a href="#" class="btn btn-danger"><i class="fa fa-trash"></i><span class="hidden-xs"> </span></a>

                @*<button type="button" id="btnSelectRow1" value="GetValue" class="btn btn-success" data-toggle="modal" data-target="#myModal1">Complete Job</button>*@
                @*<button type="button" id="btnSelectRow" value="GetValue" class="btn btn-success" data-toggle="modal" data-target="#myModal">View</button>*@
            </div>

        </div>

        <div class="x_content">
            <div id="vessel-grid"></div>
        </div>
        @*</div>*@
    </div>
</div>

<div id="example">
    <antiforgery-token />
    <table class="table">


        <tr>
            <td style="border:none;">
                <div class="row" id="SearchSection">
                    <div class="form-body col-md-6 advanced-filter">
                        <div class="form-group">
                            <input id="SearchCBMMapping" type="text" placeholder="Search.." class="form-control" style="max-width:212px;max-height:16px;color:#0E5679;border-width:1px;border-color:#0E5679;">
                        </div>
                    </div>
                    <div class="x_content">
                        <div id="CBMMappingGrid"></div>
                    </div>
                </div>
            </td>
        </tr>

    </table>

    <script>
        //

        function LoadCBMMappingGrid() {
              $("#CBMMappingGrid").kendoGrid({
                dataSource: {

                    transport: {

                         read:
                             {
                                url: "@Html.Raw(Url.Action("ReadCBMMappingDetails", "Mdm","Maintenance"))",
                                type: "POST",
                                dataType: "json",
                                data: additionalData
                        },
                        @*update:
                            {
                                url: "@Html.Raw(Url.Action("EditItem","PostponeJob","Maintenance"))",
                                type: "POST",
                                dataType: "json",
                                data: additionalData
                            },
                            create:
                            {
                                url: "@Html.Raw(Url.Action("EditItem","PostponeJob","Maintenance"))",
                                type: "POST",
                                dataType: "json"
                            }*@
                    },
                    batch: true,
                    schema:
                    {
                               data: "Data",
                               total: "Total",
                               errors: "Errors",
                        model:
                        {
                            id : "Id",
                            fields:
                            {
                                Id:
                                {
                                    validation: { required: true },
                                    editable: false,
                                },

                            }
                        }
                    },
                    pageSize: 30
                },
                height: 470,
                sortable: true,
                reorderable: true,
                groupable: true,
                resizable: true,
                filterable: true,
                columnMenu: true,
                pageable: false,
                selectable: true,
                allowCopy: true,
                columns: [

                    {
                        field: "equipmentComponent",
                        title: "Equipment Component",
                        width: "50px"
                    },
                    {
                        field: "Cbm_Name",
                        title: "CBM",
                        width: "90px"
                    },
                    {
                        field: "jobCode",
                        title: "Job Code",
                        width: "50px"
                    },

                       ],
                    editable: "inline"
            });
        }
        $(document).ready(function () {
            $("#CBMMappingGrid").empty();
            LoadCBMMappingGrid();

            //$("#tabCbmConfigure").click(function () {
            //    LoadCBMMappingGrid();
            //});
        });
         function customBoolEditor(container, options) {
                        var guid = kendo.guid();
                        $('<input class="k-checkbox" id="' + guid + '" type="checkbox" name="Discontinued" data-type="boolean" data-bind="checked:Discontinued">').appendTo(container);
                        $('<label class="k-checkbox-label" for="' + guid + '">​</label>').appendTo(container);
                    }

                    function additionalData() {
                        var data = {};
                        addAntiForgeryToken(data);
                        return data;
        }

        function LoadNewMapping(){

            //$("#tabDepartment").click();
            $("#divCbmConfigure").empty();
             $("#divCbmConfigure").load("NewCBMMapping2");
        }
    </script>
    <script type="text/javascript">
            var selectedIds = [];
        $(document).ready(function () {
            //search button
            $('#SearchCBMMapping').click(function () {
                //search
                var grid = $('#CBMMappingGrid').data('kendoGrid');
                grid.dataSource.page(1); //new search. Set page size to 1
                //grid.dataSource.read(); we already loaded the grid above using "page" function
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SearchName)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#SearchCBMMapping").click();
                    return false;
                }
            });
        });
        $('a[href="#sign_up"]').click(function () {



            //var postData = {selectedIds: selectedIds};
            //addAntiForgeryToken(postData);

            // Look for all checkboxes that have a specific class and was checked
            var chkArray = [];
            $(".chk:checked").each(function ()
            {
                chkArray.push($(this).val());
            });

            // calling  via jquery
            $.get("http://localhost:16582/Maintenance/Mdm/DeleteSelectedDepartment?selectedIds='" + chkArray + "'");
            window.location.reload();
            return false;
       });
            //delete selected
            $('#delete-selected').click(function(e) {

                e.preventDefault();

                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);


        // Look for all checkboxes that have a specific class and was checked
                 var chkArray = [];
        $(".chk:checked").each(function() {
            chkArray.push($(this).val());
        });


               // calling  via jquery
                $.get("http://localhost:16592/Maintenance/Vessel/DeleteSelected?selectedIds='" + chkArray + "'");
                window.location.reload();
                return false;
            });

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').prop('checked', $(this).is(':checked')).change();

                  //wire up checkboxes.
            $('#vessel-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.
                        selectedIds.push($check.val());
                    }
                }
                else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.
                        selectedIds = $.grep(selectedIds, function (item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
            });

        function additionalData() {
            var data = {
                SearchName: $('#@Html.FieldIdFor(model => model.SearchName)').val()
            };
            addAntiForgeryToken(data);
            return data;
        }
    </script>
    <script>
        $(document).ready(function () {
            $("#SearchCBMMapping").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#SearchSection tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
</div>






